#Robot Pathway
import math
up,down,left,right = 0,0,0,0
while True:
    lst = input().split()
    direction = lst[0]
    if direction == "UP":
        value = int(lst[1])
        up += value
    elif direction == "DOWN":
        value = int(lst[1])
        down += value
    elif direction == "LEFT":
        value = int(lst[1])
        left += value
    elif direction == "RIGHT":
        value = int(lst[1])
        right += value
    elif direction == "STOP":
        break
    else:
        print("invalid Input")
x = up - down
y = right - left
output = math.sqrt((x ** 2) + (y ** 2))
print(round(output))

#Heart Pattern I
n = int(input())
for i in range(n//2, n, 2):
    for j in range(1, n-i, 2):
        print(" ", end="")
    for j in range(1, i+1, 1):
        print("*", end="")
    for j in range(1, n-i+1, 1):
        print(" ", end="")
    for j in range(1, i+1, 1):
        print("*", end="")
    print()
for i in reversed(range(n)):
    print(" " * (n - i - 1) + "*" * (2 * i + 1))

#Password Verification
lst = input().split(",")
small, capital, num, special = 0, 0, 0, 0
lst2, result = [], []
for str1 in lst:
    str1 = str1.lstrip()
    if len(str1) in range(6, 13):
        lst2.append(str1)
for str1 in lst2:
    for j in str1:
        if j.islower():
            small += 1
        elif j.isupper():
            capital += 1
        elif j.isdigit():
            num += 1
        else:
            special += 1
    if num >= 1 and small >= 1 and capital >= 1 and special >= 1:
            result.append(str1)
    small, capital, num, special = 0, 0, 0, 0  
if len(result) == 0:
    print("No password matches the condition")
elif len(result) != 0:    
    print(" ", end="")
    for i in range(len(result)):
        if i == len(result) - 1:
            print(result[i])
            break
        print(result[i], end=",")
        
#Spiral Pattern
n=int(input())
for i in range(1,2*n):
    for j in range(1,2*n):
        print(max(abs(i-n),abs(j-n))+1,end="")
    print()
    
#Cryptography
n = int(input())
lst,numbers,ord_val,asc,char = [],[],[],[],[]
for i in range(n):
    m = input()
    lst.append(m)
if n in range(1, 51):
    for i in lst:
        for j in i:
            a = ord(j)
            asc.append(a)
        for j in reversed(range(len(i) // 2 + 1)):
            j = j - (2 * j)
            numbers.append(j)
        for j in range(1, (len(i) // 2) + 1):
            j = j - (2 * j)
            numbers.append(j)
        for j in range(len(i)):
            value = asc[j] + numbers[j]
            if value < 97 :
                value = 123 + (numbers[j])
            ord_val.append(value)
        for j in ord_val:
            c = chr(j)
            char.append(c)
        char.append(" ")
        str1 = ''.join(map(str, char))
        numbers.clear()
        asc.clear()
        ord_val = []
    x = str1.split()
    for i in x:
      print(i)      
